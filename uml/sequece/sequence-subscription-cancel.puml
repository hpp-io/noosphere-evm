@startuml sequence-subscription-cancel

!theme plain

title Subscription Cancellation Sequence

autonumber

actor User
participant SubscriptionConsumer
participant Router <<IRouter, ISubscriptionsManager>>
participant Coordinator
participant Wallet

' == 1. 사용자의 구독 취소 요청 ==
User -> SubscriptionConsumer: "Cancel my subscription"
SubscriptionConsumer -> Router: cancelSubscription(subId)
activate Router

note right of Router
  구독 취소 요청을 받습니다.
  먼저 이 구독과 관련된 모든
  보류 중인 요청(commitments)을
  정리해야 합니다.
end note

' == 2. 보류 중인 요청(lock된 자금) 정리 ==
Router -> Router: _timeoutRequests(subId)
activate Router
note right of Router
  `s_requestCommitments`에서
  `subId`에 해당하는 보류 중인
  `commitmentId`를 찾습니다.
end note

Router -> Coordinator: cancelRequests(subscriptionId)
Coordinator --> Router: ok

Router -> Wallet: cUnlock(commitmentId, token, lockedAmount)
activate Wallet
note right of Wallet
  `commitmentId`로 잠겨있던
  소비자의 자금을 해제합니다.
end note
Wallet --> Router: UnlockedOk
deactivate Wallet
Router --> Router: ok
deactivate Router


' == 3. 구독 취소 처리 ==
Router -> Router: _cancelSubscriptionHelper(subId)
activate Router
note right of Router
  `s_subscriptions[subId]`의 상태를
  '취소됨'으로 변경합니다.
  (예: activeAt = type(uint32).max)
end note
Router --> Router: ok
deactivate Router

Router --> SubscriptionConsumer: Cancellation Successful
deactivate Router

@enduml